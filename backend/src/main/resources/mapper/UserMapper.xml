<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ododok.demo.user.mapper.UserMapper">

    <!-- 결과 매핑 -->
    <resultMap id="userResultMap" type="User">
        <id property="userId" column="user_id"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/>
        <result property="profileUrl" column="profile_url"/>
        <result property="provider" column="provider"/>
        <result property="providerId" column="provider_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- 공통 컬럼 -->
    <sql id="userColumns">
        user_id, email, password, nickname, profile_url,
        provider, provider_id, created_at, updated_at
    </sql>

    <!-- 사용자 생성 -->
    <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO users (
        email, password, nickname, profile_url,
        provider, provider_id
        ) VALUES (
        #{email}, #{password}, #{nickname}, #{profileUrl},
        #{provider}, #{providerId}
        )
    </insert>

    <!-- ID로 사용자 조회 -->
    <select id="findById" resultMap="userResultMap">
        SELECT <include refid="userColumns"/>
        FROM users
        WHERE user_id = #{userId}
    </select>

    <!-- 이메일로 사용자 조회 -->
    <select id="findByEmail" resultMap="userResultMap">
        SELECT <include refid="userColumns"/>
        FROM users
        WHERE email = #{email}
    </select>

    <!-- 소셜 로그인 사용자 조회 -->
    <select id="findByProviderAndProviderId" resultMap="userResultMap">
        SELECT <include refid="userColumns"/>
        FROM users
        WHERE provider = #{provider}
        AND provider_id = #{providerId}
    </select>

    <!-- 이메일 중복 체크 -->
    <select id="existsByEmail" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM users
        WHERE email = #{email}
    </select>

    <!-- 닉네임 중복 체크 -->
    <select id="existsByNickname" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM users
        WHERE nickname = #{nickname}
    </select>

    <!-- 사용자 정보 수정 -->
    <update id="updateUser" parameterType="User">
        UPDATE users
        SET
        nickname = #{nickname},
        profile_url = #{profileUrl},
        updated_at = CURRENT_TIMESTAMP
        WHERE user_id = #{userId}
    </update>

    <!-- 비밀번호 변경 -->
    <update id="updatePassword">
        UPDATE users
        SET
        password = #{password},
        updated_at = CURRENT_TIMESTAMP
        WHERE user_id = #{userId}
    </update>

    <!-- 프로필 이미지 URL 업데이트 -->
    <update id="updateProfileUrl">
        UPDATE users
        SET
        profile_url = #{profileUrl},
        updated_at = CURRENT_TIMESTAMP
        WHERE user_id = #{userId}
    </update>

    <!-- 사용자 삭제 -->
    <delete id="deleteUser">
        DELETE FROM users
        WHERE user_id = #{userId}
    </delete>

    <!-- 소셜 계정 연동 -->
    <update id="linkSocialAccount">
        UPDATE users
        SET
        provider = #{provider},
        provider_id = #{providerId},
        updated_at = CURRENT_TIMESTAMP
        WHERE user_id = #{userId}
    </update>

</mapper>